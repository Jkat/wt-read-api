{
  "swagger": "2.0",
  "info": {
    "version": "0.1.1",
    "title": "Winding tree API",
    "description": "Node js API for Winding Tree",
    "contact": {
      "name": "Winding tree",
      "url": "https://windingtree.com/"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "externalDocs": {
    "description": "Complete documentation",
    "url": "https://windingtree.github.io/wt-js-libs/"
  },
  "schemes": [
    "https"
  ],
  "host": "demo-api.windingtree.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Hotel",
      "description": "Hotel management."
    },
    {
      "name": "Wallet",
      "description": "Wallet management."
    },
    {
      "name": "Services",
      "description": "Endpoints unrelated to business logic."
    }
  ],
  "paths": {
    "/hotels": {
      "get": {
        "tags": [
          "Hotel"
        ],
        "summary": "Retrieves all hotels.",
        "description": "Retrieves all available hotels.",
        "parameters": [
          {
            "in": "query",
            "name": "manager",
            "description": "Hotel manager's address. When present, only hotels of this manager are returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/Hotels"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hotel"
        ],
        "summary": "Create new hotel",
        "description": "Create a new hotel. Data is wrapped into a hotel property to enable easier extension in the future.",
        "parameters": [
          {
            "name": "X-Wallet-Password",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Password to the API-stored JSON keystore with Ethereum wallet."
          },
          {
            "name": "X-Wallet-Id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Wallet ID that will be used from the API encrypted wallet storage."
          },
          {
            "name": "params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WrappedHotel"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted for processing, response contains list of transaction ids to keep track of.",
            "schema": {
              "$ref": "#/definitions/CreateHotelResponse"
            }
          },
          "400": {
            "description": "Bad input data.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "It was not possible to decrypt the wallet for some reason.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Hotel does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hotels/{hotelAddress}": {
      "parameters": [
        {
          "in": "path",
          "name": "hotelAddress",
          "type": "string",
          "required": true,
          "description": "Hotel address."
        }
      ],
      "get": {
        "tags": [
          "Hotel"
        ],
        "summary": "Get Hotel.",
        "description": "Get Hotel by contract address.",
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/WrappedHotel"
            }
          },
          "404": {
            "description": "Hotel does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hotel"
        ],
        "summary": "Update hotel data",
        "description": "Update hotel data. Data is wrapped into a hotel property to enable easier extension in the future.",
        "parameters": [
          {
            "name": "X-Wallet-Password",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Password to the API-stored JSON keystore with Ethereum wallet."
          },
          {
            "name": "X-Wallet-Id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Wallet ID that will be used from the API encrypted wallet storage."
          },
          {
            "name": "params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WrappedHotel"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted for processing, response contains list of transaction ids to keep track of.",
            "schema": {
              "$ref": "#/definitions/transactionIds"
            }
          },
          "400": {
            "description": "Bad input data.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "It was not possible to decrypt the wallet for some reason.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Hotel does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hotel"
        ],
        "summary": "Remove Hotel.",
        "description": "Remove Hotel by contract address.",
        "parameters": [
          {
            "name": "X-Wallet-Password",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Password to the API-stored JSON keystore with Ethereum wallet."
          },
          {
            "name": "X-Wallet-Id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Wallet ID that will be used from the API encrypted wallet storage."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted for processing, response contains list of transaction ids to keep track of.",
            "schema": {
              "$ref": "#/definitions/transactionIds"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "It was not possible to decrypt the wallet for some reason.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Hotel does not exist.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get transactions status",
        "description": "Useful for finding out what happened to previously issued transactions.",
        "parameters": [
          {
            "in": "query",
            "name": "transactionIds",
            "description": "List of transactionIds, separator is a comma sign (,).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions status and stats",
            "schema": {
              "$ref": "#/definitions/transactionsStats"
            }
          },
          "500": {
            "description": "Unexpected error, for example the blockchain network cannot be accessed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Stores a wallet.",
        "description": "Stores a wallet JSON keyfile representation(https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) into an encrypted API storage for later use.",
        "parameters": [
          {
            "name": "X-Wallet-Password",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Password to the Ethereum wallet which is used to verify wallet ownership."
          },
          {
            "name": "params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletScrypt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet was stored",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Wallet ID"
                }
              }
            }
          },
          "400": {
            "description": "Wallet is missing some fields.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Wallet cannot be decrypted with given password or password is missing.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Wallet with the same ID already exists but with a different content.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets/{walletId}": {
      "parameters": [
        {
          "in": "path",
          "name": "walletId",
          "type": "string",
          "required": true,
          "description": "Wallet ID."
        },
        {
          "name": "X-Wallet-Password",
          "in": "header",
          "required": true,
          "type": "string",
          "description": "Password to the Ethereum wallet which is used to verify wallet ownership."
        }
      ],
      "get": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "Wallet exists and password is OK"
          },
          "401": {
            "description": "Wallet exists, but password is not OK",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Wallet does not exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many attempts",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "204": {
            "description": "Wallet was destroyed"
          },
          "401": {
            "description": "Wallet exists, but password is not OK. Wallet was not destroyed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Wallet does not exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "429": {
            "description": "Too many attempts",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateHotelResponse": {
      "title": "Response to create hotel request",
      "properties": {
        "address": {
          "description": "The resulting hotel address",
          "type": "string"
        },
        "transactionIds": {
          "$ref": "#/definitions/transactionIds"
        }
      }
    },
    "transactionIds": {
      "description": "List of generated transaction hashes",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "transactionsStats": {
      "description": "Result of multiple transactions statuses",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number"
            },
            "processed": {
              "type": "number"
            },
            "minBlockAge": {
              "type": "number"
            },
            "maxBlockAge": {
              "type": "number"
            },
            "allPassed": {
              "type": "boolean"
            }
          }
        },
        "results": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "transactionHash": {
                "type": "string"
              },
              "blockAge": {
                "type": "number"
              },
              "decodedLogs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "event": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "from": {
                "type": "string"
              },
              "to": {
                "type": "string"
              },
              "raw": {
                "type": "object",
                "properties": {
                  "transactionHash": {
                    "type": "string"
                  },
                  "blockNumber": {
                    "type": "number"
                  },
                  "blockHash": {
                    "type": "string"
                  },
                  "transactionIndex": {
                    "type": "number"
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "contractAddress": {
                    "type": "string"
                  },
                  "cumulativeGasUsed": {
                    "type": "number"
                  },
                  "gasUsed": {
                    "type": "number"
                  },
                  "logs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "data": {
                          "type": "string"
                        },
                        "topics": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "logIndex": {
                          "type": "number"
                        },
                        "transactionIndex": {
                          "type": "number"
                        },
                        "transactionHash": {
                          "type": "number"
                        },
                        "blockHash": {
                          "type": "number"
                        },
                        "blockNumber": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Error": {
      "title": "Error",
      "description": "Default schema for errors returned by API.",
      "properties": {
        "status": {
          "type": "number",
          "description": "HTTP status"
        },
        "code": {
          "type": "string",
          "description": "Computer-readable error. Use this for comparison."
        },
        "short": {
          "type": "string",
          "description": "Human-readable error with a short description of the error."
        },
        "long": {
          "type": "string",
          "description": "Verbose explanation of what happen."
        }
      }
    },
    "Hotels": {
      "title": "Hotels",
      "description": "Hotels list.",
      "type": "object",
      "properties": {
        "hotels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hotel"
          }
        }
      }
    },
    "Location": {
      "title": "Location",
      "description": "GPS location",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "WrappedHotel": {
      "title": "WrappedHotel",
      "properties": {
        "hotel": {
          "$ref": "#/definitions/Hotel"
        }
      }
    },
    "Hotel": {
      "title": "Hotel",
      "description": "Hotel properties",
      "properties": {
        "address": {
          "type": "string"
        },
        "manager": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WalletScrypt": {
      "title": "WalletScrypt",
      "description": "Wallet properties",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "number"
        },
        "crypto": {
          "type": "object",
          "properties": {
            "mac": {
              "type": "string"
            },
            "ciphertext": {
              "type": "string"
            },
            "cipherparams": {
              "type": "object",
              "properties": {
                "iv": {
                  "type": "string"
                }
              }
            },
            "cipher": {
              "type": "string"
            },
            "kdf": {
              "type": "string"
            },
            "kdfparams": {
              "type": "object",
              "properties": {
                "dklen": {
                  "type": "string"
                },
                "salt": {
                  "type": "string"
                },
                "n": {
                  "type": "string"
                },
                "r": {
                  "type": "string"
                },
                "p": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "WalletPbkdf2Sha256": {
      "title": "Wallet PBKDF2 SHA-256",
      "description": "Wallet properties",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "number"
        },
        "crypto": {
          "type": "object",
          "properties": {
            "mac": {
              "type": "string"
            },
            "ciphertext": {
              "type": "string"
            },
            "cipherparams": {
              "type": "object",
              "properties": {
                "iv": {
                  "type": "string"
                }
              }
            },
            "cipher": {
              "type": "string"
            },
            "kdf": {
              "type": "string"
            },
            "kdfparams": {
              "type": "object",
              "properties": {
                "dklen": {
                  "type": "string"
                },
                "salt": {
                  "type": "string"
                },
                "c": {
                  "type": "string"
                },
                "prf": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}